#include <iostream>
#include "SavingAccount.hpp"
#include "TrustAccount.hpp"
#include "CheckingAccount.hpp"
#include "Account.hpp"
#include "Accounts_Util.hpp"
#include <vector>
#include <memory>
using namespace std;

class Test{
	int data;
public:
	Test():data(0){cout<<"Test Constructor called for data = " << data <<  endl;};
	Test(int d):data(d){cout<<"Test Constructor called for data = " << data << endl;};
	~Test(){cout<<"Test Destructor called  for data = " << data << endl;}
	int getData() const {return data;}
};


int main(){
	shared_ptr<Test> p1 {new int(100)};
	cout << "Use count: " << p1.use_count() << endl;
	shared_ptr<Test> p2 = p1;
	cout << "Use count: " << p2.use_count() << endl;
	p2.reset();
	cout << "Use count: " << p1.use_count() << endl;
	cout << "Use count: " << p2.use_count() << endl;

	return 0;

}




